---
import FadeIn from "../components/FadeIn.astro";

export interface FAQItem { question: string; answer: string }
interface Props { items: FAQItem[]; multipleOpen?: boolean; title?: string }
const { items, multipleOpen = true, title = "FAQ" } = Astro.props;
---

<section class="fade-in w-full max-w-3xl py-20 mx-auto" data-multiple-open={multipleOpen}>
  <h2 class="text-3xl font-bold tracking-tight text-center text-white mb-6">{title}</h2>

  <ul class="rounded-2xl border border-gray-800 overflow-hidden bg-gray-900/50 divide-y divide-gray-800">
    {items.map((item, i) => {
      const panelId = `faq-panel-${i}`;
      const buttonId = `faq-button-${i}`;
      return (
        <li class="faq-item">
          <button
            id={buttonId}
            type="button"
            class="w-full flex items-center justify-between gap-4 text-left px-5 py-4 focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--primary-color)]"
            aria-controls={panelId}
            aria-expanded="false"
            data-trigger
          >
            <span class="font-medium text-gray-100">{item.question}</span>
            <svg class="size-5 shrink-0 transition-transform duration-300" data-chevron viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 0 1 1.06.02L10 10.17l3.71-2.94a.75.75 0 1 1 .94 1.17l-4.24 3.36a.75.75 0 0 1-.94 0L5.21 8.4a.75.75 0 0 1 .02-1.19z" clip-rule="evenodd" />
            </svg>
          </button>

          {/* Grid-Panel: 0fr → 1fr animiert ohne Layout-Jank */}
          <div
            id={panelId}
            role="region"
            aria-labelledby={buttonId}
            class="faq-panel will-change-[grid-template-rows]"
            data-panel
          >
            <div class="faq-panel-inner px-5 pb-4 text-gray-300">
              <div class="pt-1 pb-3">
                {item.answer}
              </div>
            </div>
          </div>
        </li>
      );
    })}
  </ul>

  <style is:inline>
    /* Jank-freie Animation über Grid */
    .faq-panel {
      display: grid;
      grid-template-rows: 0fr;           /* zu */
      transition: grid-template-rows 240ms cubic-bezier(.2,0,0,1);
      overflow: hidden;
      overflow-anchor: none;             /* kein Scroll-Jump */
    }
    .faq-panel-inner {
      min-height: 0;                     /* wichtig für 0fr-Clip */
      overflow: hidden;
      opacity: 0;
      transform: translateY(-2px);
      transition: opacity 200ms ease, transform 200ms ease;
    }
    .faq-item[aria-open="true"] .faq-panel {
      grid-template-rows: 1fr;           /* auf */
    }
    .faq-item[aria-open="true"] .faq-panel-inner {
      opacity: 1;
      transform: translateY(0);
    }
    .faq-item[aria-open="true"] [data-chevron] { transform: rotate(180deg); }
    @media (prefers-reduced-motion: reduce) {
      .faq-panel, .faq-panel-inner { transition: none !important; }
    }
  </style>

  <script is:inline>
    (function () {
      const root = document.currentScript.closest("section");
      if (!root) return;
      const multipleOpen = root.dataset.multipleOpen !== "false";
      const items = root.querySelectorAll(".faq-item");

      items.forEach((item) => {
        const btn = item.querySelector("[data-trigger]");
        const panel = item.querySelector("[data-panel]");

        // init
        item.setAttribute("aria-open", "false");
        btn.setAttribute("aria-expanded", "false");

        btn.addEventListener("click", () => {
          const isOpen = item.getAttribute("aria-open") === "true";

          if (!isOpen) {
            if (!multipleOpen) {
              // schließe andere
              items.forEach((it) => {
                if (it === item) return;
                if (it.getAttribute("aria-open") === "true") {
                  it.setAttribute("aria-open", "false");
                  const b = it.querySelector("[data-trigger]");
                  b && b.setAttribute("aria-expanded", "false");
                }
              });
            }
            item.setAttribute("aria-open", "true");
            btn.setAttribute("aria-expanded", "true");
          } else {
            item.setAttribute("aria-open", "false");
            btn.setAttribute("aria-expanded", "false");
          }
        });
      });
    })();
  </script>

  <!-- Purge-Schutz -->
  <span class="hidden rotate-180"></span>
</section>
