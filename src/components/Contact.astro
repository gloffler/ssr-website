---
export interface Props {
  title?: string;
  subtitle?: string;
  action?: string; // z.B. "/api/contact" oder externer Endpoint (Formspree/Getform)
  method?: "POST" | "GET";
  ctaLabel?: string;
  successMessage?: string;
  errorMessage?: string;
}

const {
  title = "Kontakt aufnehmen",
  subtitle = "Sag mir kurz, worum es geht. Ich melde mich zeitnah.",
  action = "/api/contact",
  method = "POST",
  ctaLabel = "Nachricht senden",
  successMessage = "Danke! Deine Nachricht wurde erfolgreich übermittelt.",
  errorMessage = "Ups, da ging was schief. Bitte versuch's erneut.",
} = Astro.props;
---

<section
  id="contact"
  class="fade-in scroll-mt-30 px-6 md:px-10 lg:px-40 py-20 bg-black"
>
  <div class="max-w-3xl mx-auto">
    <div class="text-center mb-8">
      <h2 class="text-3xl md:text-4xl font-bold text-white tracking-tight">
        {title}
      </h2>
      <p class="text-gray-400 mt-3">{subtitle}</p>
    </div>

    <form
      id="contactForm"
      action={action}
      method={method}
      onsubmit="return false;"
      data-success={successMessage}
      data-error={errorMessage}
      class="bg-gray-900/50 border border-gray-800 rounded-2xl p-6 md:p-8 space-y-6"
      novalidate
    >
      <!-- Turnstile Widget -->
      <div
        class="cf-turnstile"
        data-sitekey={import.meta.env.PUBLIC_TURNSTILE_SITE_KEY}
        data-theme="dark"
      >
      </div>
      <!-- Honeypot -->
      <input
        type="text"
        name="company"
        tabindex="-1"
        autocomplete="off"
        class="hidden"
      />

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="name" class="block text-sm font-medium text-gray-300">
            Dein Name
          </label>
          <input
            id="name"
            name="name"
            type="text"
            required
            class="mt-2 w-full rounded-xl bg-black/40 border border-gray-700 text-white placeholder-gray-500 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#FF6B00]"
            placeholder="Max Mustermann"
          />
        </div>

        <div>
          <label for="email" class="block text-sm font-medium text-gray-300">
            E-Mail
          </label>
          <input
            id="email"
            name="email"
            type="email"
            required
            class="mt-2 w-full rounded-xl bg-black/40 border border-gray-700 text-white placeholder-gray-500 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#FF6B00]"
            placeholder="dein.name@mail.com"
          />
        </div>
      </div>

      <div>
        <label for="subject" class="block text-sm font-medium text-gray-300">
          Betreff
        </label>
        <input
          id="subject"
          name="subject"
          type="text"
          class="mt-2 w-full rounded-xl bg-black/40 border border-gray-700 text-white placeholder-gray-500 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#FF6B00]"
          placeholder="Z. B. Mixing für Single"
        />
      </div>

      <div>
        <label for="message" class="block text-sm font-medium text-gray-300">
          Nachricht
        </label>
        <textarea
          id="message"
          name="message"
          required
          rows={6}
          class="mt-2 w-full rounded-xl bg-black/40 border border-gray-700 text-white placeholder-gray-500 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#FF6B00]"
          placeholder="Erzähl kurz, worum es geht …"></textarea>
      </div>

      <div class="flex items-start md:items-center gap-3">
        <input
          id="consent"
          name="consent"
          type="checkbox"
          required
          class="mt-1 h-5 w-5 rounded border-gray-700 bg-black/40 text-[#FF6B00] focus:ring-[#FF6B00]"
        />
        <label for="consent" class="text-sm text-gray-400">
          Ich stimme zu, dass meine Angaben zur Kontaktaufnahme verarbeitet
          werden. (<a href="/privacy" class="text-[#FF6B00] hover:underline"
            >Datenschutz</a
          >)
        </label>
      </div>

      <div class="flex items-start flex-col gap-3">
        <button
          type="submit"
          class="cta-button inline-flex items-center justify-center rounded-full px-6 h-12 font-semibold bg-[#FF6B00] text-black hover:shadow-[0_0_20px_#FF6B00] transition"
        >
          <span>{ctaLabel}</span>
        </button>
        <p id="formStatus" class="text-sm text-gray-400" aria-live="polite"></p>
      </div>
    </form>
  </div>

  <script
    src="https://challenges.cloudflare.com/turnstile/v0/api.js"
    async
    defer></script>

  <script is:inline>
    // Props aus Astro beim Rendern in Variablen injizieren
    const form = document.getElementById("contactForm");
    const statusEl = document.getElementById("formStatus");
    const successMessage = form?.dataset.success || "Danke!";
    const errorMessage = form?.dataset.error || "Fehler!";

    function setStatus(msg, ok = true) {
      if (!statusEl) return;
      statusEl.textContent = msg;
      statusEl.className =
        "text-sm " + (ok ? "text-green-400" : "text-red-400");
    }

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const name = form.querySelector("#name").value.trim();
      const email = form.querySelector("#email").value.trim();
      const message = form.querySelector("#message").value.trim();
      const consent = form.querySelector("#consent").checked;

      if (!name || !email || !message || !consent) {
        setStatus(
          "Bitte fülle alle Pflichtfelder aus und bestätige die Einwilligung.",
          false
        );
        return;
      }

      try {
        setStatus("Senden …", true);
        const formData = new FormData(form);
        const res = await fetch(form.action, {
          method: form.method || "POST",
          body: formData,
          headers: { Accept: "application/json" },
        });

        if (!res.ok) throw new Error("Request failed");

        setStatus(successMessage, true);
        form.reset();
      } catch (err) {
        console.error("Kontaktformular Fehler:", err);
        setStatus(errorMessage, false);
      }
    });
  </script>
</section>
